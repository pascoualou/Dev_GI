/*------------------------------------------------------------------------File        : PropertiesPurpose     : Simple property manager for security featues.Author(s)   : davec - 2013/04/08Notes       : ----------------------------------------------------------------------*/routine-level on error undo, throw.class oerealm.Util.Properties:     /*------------------------------------------------------------------------------    Purpose:    Notes:    ------------------------------------------------------------------------------*/    define private static variable debugMsg as logical no-undo initial false.    define private temp-table m_properties no-undo        field propName  as character         field propValue as character         index idxName   is unique primary propName.    define private stream  m_propStream.    constructor public Properties( ):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/        super ().    end constructor.    constructor public Properties (p_path as character):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/         super ().         if p_path = ? or p_path = ''         then undo, throw new Progress.Lang.AppError("Invalid properties file path", 1).         LoadProps(p_path).    end constructor.    destructor public Properties ( ):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/    end destructor.    method public character GetCharacterProperty(p_propName as character, p_defValue as character):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/        if p_propName = ? or p_propName = ''        then undo, throw new Progress.Lang.AppError("Invalid parameters", 2).        find first m_properties            where m_properties.propName = p_propName no-error.         if available m_properties then return m_properties.propValue.        if p_defValue = ? then undo, throw new Progress.Lang.AppError("Invalid parameters", 3).        return p_defValue.    end method.    method public logical GetLogicalProperty(p_propName as character, p_defValue as logical):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/        define variable vcTemp   as character no-undo.         if p_propName = ? or p_propName = ''        then undo, throw new Progress.Lang.AppError("Invalid parameters", 4).        find first m_properties            where propName = p_propName no-error.         if available m_properties and m_properties.propValue > '' then vcTemp = lc(m_properties.propValue).        if vcTemp = '' or vcTemp = ?        then if p_defValue = ?            then undo, throw new Progress.Lang.AppError("Invalid parameters", 5).            else return p_defValue.        return (vcTemp begins "t" or vcTemp begins "y" or vcTemp begins "1" ).    end method.    method protected logical LoadProps (p_path as character):        /*------------------------------------------------------------------------------        Purpose:        Notes:        ------------------------------------------------------------------------------*/        define variable retVal        as logical   no-undo.        define variable propFilePath  as character no-undo.         if debugMsg then message "Loading properties from file:" p_path.        propFilePath = search(p_path).        if propFilePath <> ? then do:            input stream m_propStream from value(propFilePath).            if debugMsg then message "Loading properties file:" propFilePath.            repeat:                create m_properties.                import stream m_propStream delimiter "=" m_properties no-error.                if debugMsg then message "Loaded property" m_properties.propName "with value:" m_properties.propValue.            end.            input stream m_propStream close.            retVal = true.        end.        else if debugMsg then message "No properties file to load:" p_path.        return retVal.        catch e as Progress.Lang.Error:            message "Error in properties load: " e:GetMessage(1).        end catch.        finally:            input stream m_propStream close.        end finally.    end method.end class.